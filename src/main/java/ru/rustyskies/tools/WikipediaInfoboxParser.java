package ru.rustyskies.tools;

import lombok.experimental.UtilityClass;
import lombok.extern.slf4j.Slf4j;
import ru.rustyskies.beans.City;
import ru.rustyskies.beans.Country;
import ru.rustyskies.beans.Field;

import java.util.HashMap;
import java.util.Map;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

@Slf4j
@UtilityClass
public class WikipediaInfoboxParser {

    private String extractInfobox(String wikitext) {
        if (wikitext == null || wikitext.trim().equals("")) {
            return null;
        }
        int startPos = wikitext.indexOf("{{Infobox");
        if (startPos == -1) {
            log.warn("There is no InfoBox in the provided wikitext: " + wikitext);
            return null;
        }
        return WikipediaUtils.getGroup(wikitext, startPos, "}}", 0);
    }

    private String getParam(String infoboxWikitext, String paramName) {
        String s1 = "|" + paramName + "=";

        int p = infoboxWikitext.indexOf(s1);
        if (p == -1) {
            log.warn("There is no '" + paramName + "' param in provided wikitext");
            return null;
        } else {
            Scanner s = new Scanner(infoboxWikitext.substring(p + s1.length()));
            s.useDelimiter("[}|]");
            if (s.hasNext()) {
                return s.next();
            }
            s.close();
        }
        return null;
    }

    private Double getDoubleParam(String infoboxWikitext, String paramName) {
        String str = getParam(infoboxWikitext, paramName);
        if (str != null && !str.trim().equals("")) {
            return Double.valueOf(str.trim());
        } else {
            return null;
        }
    }

    private Integer getIntParam(String infoboxWikitext, String paramName) {
        String str = getParam(infoboxWikitext, paramName);
        if (str != null && !str.trim().equals("")) {
            return Integer.valueOf(str.trim());
        } else {
            return null;
        }
    }

    private Integer getInfoboxGdp(String gdpStr) {
        if (gdpStr != null && !gdpStr.trim().equals("")) {
            Matcher m = Pattern.compile("\\$[0-9,]+").matcher(gdpStr);
            if (m.find()) {
                return Integer.valueOf(m.group().substring(1).replaceAll(",", ""));
            } else {
                return null;
            }
        } else {
            return null;
        }
    }

    public Map<Field, Object> parseInfobox(City city, Map<Field, String> fieldsMap) {
        Map<Field, Object> resultMap = new HashMap<>();

        String infoBox = extractInfobox(WikipediaUtils.getWikiPageXml(city.name));
        for (Field f : fieldsMap.keySet()) {
            Object value;
            if (Field.GDP.equals(f) || Field.GDPpC.equals(f)) {
                value = getInfoboxGdp(getParam(infoBox, "GDP"));
            } else {
                switch (f.fieldType) {
                    case String:
                        value = getParam(infoBox, fieldsMap.get(f));
                        break;
                    case Integer:
                        value = getIntParam(infoBox, fieldsMap.get(f));
                        break;
                    case Double:
                        value = getDoubleParam(infoBox, fieldsMap.get(f));
                        break;
                    default:
                        throw new RuntimeException("Unexpected field type: " + f.fieldType);
                }
            }
            resultMap.put(f, value);
        }
        return resultMap;
    }

    public void main(String args[]) {
//        System.out.println(getGdp("130/ $152 "));
//        System.out.println(getGdp("35,600/ $41,900 "));
//        System.out.println(parseInfobox(City.Berlin));
//        System.out.println(parseInfobox(Main.City.Moscow));

//        String wikitext = "[[Moscow]] | Russia | Eastern Europe | style=\"background:#abd5f5;\"| {{nts|225.0}} (2015)&lt;ref name=\"autogenerated1\"&gt;{{cite web|url=http://mrd.gks.ru/wps/wcm/connect/rosstat_ts/mrd/ru/statistics/grp/ |title=Валовой региональный продукт::Мордовиястат |website= Mrd.gks.ru |date= |accessdate= 2017-04-01}}&lt;/ref&gt; | style=\"background:#50f231;\"| {{nts|553.3}} | style=\"background:#79ff76;\"| {{nts|321}} | style=\"background:#FEE7F0;\"| {{nts|325.8}} | style=\"background:khaki;\"\n";
//        System.out.println(wikitext);
//        System.out.println(getGroup(wikitext, 0, "|", 4));


        System.out.println(extractInfobox(WikipediaUtils.getWikiPageXml("Berlin")));

    }

}
